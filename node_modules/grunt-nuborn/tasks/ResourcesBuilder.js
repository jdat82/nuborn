require("./inheritance");
var grunt = require("grunt");
var nodePath = require("path");
var sep = nodePath.sep;

var copy = {
	main: {
		files: []
	}
};

var ResourcesBuilder = Object.subClass(
{

	copyStaticResources: function(targets, fileset) 
	{
		grunt.log.writeln("fileset: " + JSON.stringify(fileset));

		if (!fileset) { return };

		grunt.config.requires("nuborn.classic.resources.fileset");

		var filesToCopy = copy.main.files;

		fileset.forEach(function(node, index, array) 
		{
			if (!node.patterns) return;
			grunt.log.writeln("on node: " + JSON.stringify(node));
			for (var key in targets) 
			{
				grunt.log.writeln("on target: " + key);
				if (targets[key] && node[key]) 
				{
					filesToCopy.push({
						expand: true,
						flatten: true,
						src: node.patterns,
						dest: "build" + sep + key + sep + node[key].output
					});
				}
			}
		}, this);

		grunt.config("copy", copy);
		grunt.task.run("copy");
	}
});

module.exports = new ResourcesBuilder();