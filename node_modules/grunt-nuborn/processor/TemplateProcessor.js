// allow inheritance
require("../common/inheritance");

// load grunt API
var grunt = require("grunt");

// load path API
var nodePath = require("path");

// system path separator
var sep = nodePath.sep;

// scopes constants
var scopes = require("../common/Constants").scopes;

// utility methods
var Util = require("../common/Util");

/**
* @class TemplateProcessor
* It's job is to process the "templates" configuration part.
*/
var TemplateProcessor = Object.subClass(
{
    /**
    * Generate CSS files from SCSS parts and optimize them.
    * @param targets the list of targets (android/ios/web...) 
    * @param configuration css configuration part in gruntfile
    * @param scope current build scope
    */
    process: function(targets, configuration, scope)
    {
		// get references to possible targets 
		var android = targets.android;
		var ios = targets.ios;
		var web = targets.web;

		var config = grunt.config.data;
		// get the existing hogan config, or a new one 
		config["hogan"] = config["hogan"] || {};
		// get a reference to the configuration of hogan
		var hogan = config["hogan"];
		// create and initialize the default target
		var target = {};
		// Create array of Hogan Targets
		var nubornHoganTargets = [];
		// define a default hogan configuration
		var defaultConfiguration = {
			namespace: "Templates",
			prettify: true,
			defaultName: function(fileName) {
				var name = nodePath.basename(fileName, nodePath.extname(fileName));
				var module = nodePath.basename(nodePath.dirname(nodePath.dirname(fileName)));
				return module + "_" + name;
			}
		};
		// create the target options
		target.options = Util.jQueryExtend(true, {}, defaultConfiguration, configuration.options);
		// Create the sources 
		var targetSources = [].concat(configuration.patterns ? configuration.patterns : []);
		if (!targetSources.length) {
			grunt.log.writeln("Patterns directive is empty.");
			return false;
		}
		// initialize files directive
		var key = "src" + sep + "nuborn-hogan.js";
		target.files = {
			key: targetSources
		};
		// register the target to the task
		hogan["nuborn-target"] = target;
		// run the hogan task
		grunt.task.run("hogan:nuborn-target");
    }
});

module.exports = TemplateProcessor;
