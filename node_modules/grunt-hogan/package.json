{
  "name": "grunt-hogan",
  "description": "a grunt task to compile/precompile hogan templates",
  "version": "0.2.2-2",
  "homepage": "https://github.com/automatonic/grunt-hogan",
  "author": {
    "name": "Elliott B. Edwards",
    "email": "elliott@automatonic.net",
    "url": "http://automatonic.net"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/automatonic/grunt-hogan.git"
  },
  "bugs": {
    "url": "https://github.com/automatonic/grunt-hogan/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/automatonic/grunt-hogan/blob/master/LICENSE-MIT"
    }
  ],
  "main": "grunt.js",
  "bin": {
    "grunt-hogan": "bin/grunt-hogan"
  },
  "engines": {
    "node": "*"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "hogan.js": "~2.0.0",
    "underscore": "~1.4.4"
  },
  "devDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-hogan\n\na [grunt](http://gruntjs.com) task to precompile [hogan](http://hoganjs.com) templates \n\n## Getting Started\n\n> NOTE: This documentation is for grunt version 0.4+. To work with version 0.3.x, see [here](https://github.com/automatonic/grunt-hogan/blob/grunt-0.3/README.md)\n\nInstall this grunt plugin next to your project's [Gruntfile.js][getting_started] with: `npm install grunt-hogan --save-dev`\n\nThen add this line to your project's `Gruntfile.js`:\n\n```javascript\ngrunt.loadNpmTasks('grunt-hogan');\n```\n\nTo precompile a single template into a single output file:\n\n```javascript\ngrunt.initConfig({\n    //...\n    hogan: {\n        //desired target name\n        mytarget : {\n          //path to input template\n          template : \"view/chair.hogan\",\n          //output path, relative to Gruntfile.js\n          output : \"bandanna.js\"\n        }\n    },\n    //...\n});\n```\n\n###Multiple input templates via patterns\n\n```javascript\ngrunt.initConfig({\n    //...\n    hogan: {\n        //desired target name\n        mytarget : {\n          //Wildcard of desired templates\n          templates : \"view/**/*.hogan\",\n          //output destination\n          output : \"hulkingup.js\"\n        }\n    },\n    //...\n});\n```\n\n###Multiple input template patterns\n\n```javascript\n//...\nmytarget : {\n    //...\n    templates : [\"view/wwf/*.hogan\", \"view/wcw/*.hogan\"],\n    //...\n}\n//...\n```\n\n##\"Binders\"\n\nBy default, the all compiled templates in a single grunt target will be \"bound\" together by the default \"binder\" (which\nis itself a pre-compiled template). The \"default\" binder generates javascript\nthat is designed to work both as a node.js module and in the browser via a \n`<script/>` tag. Other built-in binders are:\n\n  * \"hulk\" - should output similarly to hogan's \"hulk\" command line tool...which is \"vanilla\" javascript\n  * \"nodejs\" - exposes compiled templates as a node.js module\n  * \"amd\" - exposes compiled templates in amd format\n  * \"revealing\" - exposes compile templates via the revealing module pattern \n\nYou can also create your own binder templates to support other usages. See \"Custom Binders\" section below.\n\nTo specify a binder, use a \"binderName\" directive:\n\n```javascript\n//...\nmytarget : {\n    templates : \"view/**/*.hogan\",\n    output : \"hulkingup.js\",\n    binderName : \"hulk\"\n}\n//...\n```\n###Custom Binders\n\nTo specify a *custom* binder, supply a path for the \"binder\" attribute (note that this differs from the \"binderName\" in examples above) that resolves to a binder module:\n\n```javascript\n//...\nbinder : __dirname + \"/my/custom/binder.js\"\n//...\n```\nSee the `custombinder_bootstrap` and `multi_custombinder` targets in the \n[example gruntfile](https://github.com/automatonic/grunt-hogan/blob/master/example/Gruntfile.js) \nfor futher detail on creating and using custom binders.\n\n[grunt]: http://gruntjs.com/\n[getting_started]: https://github.com/gruntjs/grunt/wiki/Getting-started\n\n###Using precompiled templates\n\nAs of version 0.2.2, all built in binders create javascript that functions similarly in intention, but varies with respect to the target use.\n\nGiven a precompile task like:\n\n```javascript\nmytarget : {\n  templates : ['view/fist.html', 'view/foe.html', 'view/what.you.gonna.do.html'],\n  output : \"templates.js\",\n  binderName : 'nodejs'\n}\n```\nA node.js application could:\n\n```javascript\n//Load the module\nvar templates = require('./templates.js');\n\n//Render a template with a context object\nvar html1 = templates.fist({knuckles: true});\n\n//Render a template with context and partial templates\nvar html2 = templates.foe({}, {partialName: partialTemplateFromSomewhere});\n\n//Render a template with a non-variable-like name\nvar html3 = templates['what.you.gonna.do']({context:'catchphrase'});\n\n```\n\nAll of the binders (with the exceptions of special case binders like the bootstrap and \"hulk\") seek to expose the full api of the template render in this manner.\n\nAlso, if a partial parameter is not specified, the default render behavior is to make all the other templates in the binder (\"sibling templates\") available as partials in the render.\n\nOther templates will vary slightly in their syntax to support their purpose.\n\n## Examples\n * See [an example gruntfile](https://github.com/automatonic/grunt-hogan/blob/master/example/Gruntfile.js)\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][grunt].\n\n## Release History\n * 0.2.- - [in progress](https://github.com/automatonic/grunt-hogan/issues?milestone=2&state=open)\n * 0.2.2 - Binder template overhaul\n   * Added partial support on render functions\n   * Sibling partials by default\n   * *Breaking changes for precompiled template API*\n * 0.2.1 - AMD Binder\n   * Now supports use of \"sibling templates\" (defined within the same binder) as partials\n   * *Breaking change* - Now exports a render function instead of the full template\n * 0.1.1 - [*Breaking Changes* and Custom Binder Support](https://github.com/automatonic/grunt-hogan/issues?milestone=1)\n   * \"render\" directive has [been discarded](https://github.com/automatonic/grunt-hogan/issues/8)\n   * \"options\" notation has been discarded (supply attributes directly as keys on the target)\n\n##Acknowledgements\n * a comment by \"baz\" [here](http://soenkerohde.com/2012/02/node-js-server-side-compile-hogan-js-templates/) pointed me in the right direction\n\n## License\nCopyright (c) 2013 Elliott B. Edwards  \nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-hogan@0.2.2-2",
  "_from": "grunt-hogan@0.x.x"
}
