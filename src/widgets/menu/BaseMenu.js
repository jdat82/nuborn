// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define("widgets.BaseMenu", function(require, exports, module) {
  'use strict';
  var $, Base, Menu, UIUtils, Utils, defaults;
  $ = jQuery;
  Utils = require("utils.Utils");
  UIUtils = require("utils.UIUtils");
  Base = require("common.Base");
  /*
  Default settings.
  */

  defaults = {
    id: "menu",
    templateId: "menu"
  };
  /**
  @class widgets.BaseMenu
  @extends common.Base
  Base class to implement a global menu
  */

  Menu = (function(_super) {
    __extends(Menu, _super);

    /**
    @constructor
    @param  {Object} settings
    Defaults: {
    - id: widget id in DOM
    - templateId: template identifier
    }
    */


    function Menu(settings) {
      var templateId;
      Menu.__super__.constructor.call(this, defaults, settings);
      templateId = this.settings.templateId;
      this.html.menu = $(templates[templateId].render(this.settings));
      $(document.body).append(this.html.menu);
      this.data.isMenuShown = false;
    }

    Menu.prototype.toggleMenu = function() {
      if (this.data.isMenuShown) {
        this.hide();
      } else {
        this.show();
      }
      return this.data.isMenuShown = !this.data.isMenuShown;
    };

    /*
    Shows the me
    */


    Menu.prototype.show = function() {
      UIUtils.disableScroll();
      return this.html.menu.addClass("menu-show");
    };

    /*
    Hides the me
    */


    Menu.prototype.hide = function() {
      UIUtils.enableScroll();
      return this.html.menu.removeClass("menu-show");
    };

    return Menu;

  })(Base);
  return module.exports = Menu;
});
